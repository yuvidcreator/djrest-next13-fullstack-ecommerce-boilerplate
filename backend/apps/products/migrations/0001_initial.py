# Generated by Django 4.2.1 on 2023-09-03 13:46

import apps.common.models
import apps.products.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Category Name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Category Slug",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "categories",
            },
        ),
        migrations.CreateModel(
            name="FAQBase",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.TextField(unique=True, verbose_name="Question Title"),
                ),
            ],
            options={
                "verbose_name": "FAQ List",
                "verbose_name_plural": "FAQ List",
                "db_table": "faqbases",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=64, verbose_name="Product Name")),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Product Slug",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        max_length=255, verbose_name="Product Description"
                    ),
                ),
                (
                    "wholesale_price",
                    models.PositiveBigIntegerField(
                        blank=True, default=0, null=True, verbose_name="Wholesale Price"
                    ),
                ),
                (
                    "shipping_charges",
                    models.PositiveBigIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Shipping Charges",
                    ),
                ),
                (
                    "return_policy",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Return Policy",
                    ),
                ),
                (
                    "avg_rating",
                    models.PositiveBigIntegerField(
                        blank=True, default=0, null=True, verbose_name="Rating"
                    ),
                ),
                (
                    "no_of_reviews",
                    models.PositiveBigIntegerField(
                        blank=True, default=0, null=True, verbose_name="No Of Reviews"
                    ),
                ),
                (
                    "no_of_views",
                    models.PositiveBigIntegerField(
                        blank=True, default=0, null=True, verbose_name="No. of Views"
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "product_status",
                    models.CharField(
                        blank=True,
                        choices=[("Draft", "Draft"), ("Published", "Published")],
                        default="Draft",
                        help_text="This ensures if Product added to Database or Not. Draft = Product added to DB, Pulished = Product added to DB also ready to Show on website.",
                        max_length=20,
                        null=True,
                        verbose_name="Product Status",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "db_table": "products",
            },
        ),
        migrations.CreateModel(
            name="SubProduct",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sku",
                    models.CharField(
                        max_length=64, unique=True, verbose_name="Sub Product SKU"
                    ),
                ),
                (
                    "video_link",
                    models.URLField(
                        blank=True, null=True, verbose_name="Product Video Link"
                    ),
                ),
                (
                    "wholesale_price",
                    models.PositiveBigIntegerField(
                        blank=True, default=0, null=True, verbose_name="Wholesale Price"
                    ),
                ),
                (
                    "discount",
                    models.PositiveIntegerField(
                        blank=True, default=0, verbose_name="Discount"
                    ),
                ),
                (
                    "no_of_sold",
                    models.PositiveIntegerField(
                        blank=True, default=0, verbose_name="No Of Sold"
                    ),
                ),
                (
                    "is_out_of_stock",
                    models.BooleanField(default=False, verbose_name="Is Out Of Stock"),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, max_length=75, null=True, verbose_name="Meta Title"
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True,
                        max_length=160,
                        null=True,
                        verbose_name="Meta Description",
                    ),
                ),
                (
                    "meta_keyword",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Meta Keyword",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub Product",
                "verbose_name_plural": "Sub Products",
                "db_table": "subproducts",
            },
        ),
        migrations.CreateModel(
            name="SubProductsColor",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=20, verbose_name="Color Name")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, verbose_name="Color Slug"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Color Code"
                    ),
                ),
                (
                    "color_image",
                    apps.common.models.WEBPField(
                        blank=True,
                        null=True,
                        upload_to=apps.products.utils.product_images_upload_path,
                        verbose_name="Color Image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub Products Color",
                "verbose_name_plural": "Sub Products Colors",
                "db_table": "subproductscolors",
            },
        ),
        migrations.CreateModel(
            name="SubProductsSize",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        default="Inch", max_length=20, verbose_name="Same Name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, verbose_name="Size Slug"
                    ),
                ),
                (
                    "size",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Size in No."
                    ),
                ),
                (
                    "price",
                    models.PositiveBigIntegerField(
                        blank=True, default=0, null=True, verbose_name="Regular Price"
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        blank=True, default=0, null=True, verbose_name="Quantity"
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub Products Size",
                "verbose_name_plural": "Sub Products Sizes",
                "db_table": "subproductssizes",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, verbose_name="Slug"
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "db_table": "tags",
            },
        ),
        migrations.CreateModel(
            name="SubProductImage",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.models.WEBPField(
                        upload_to=apps.products.utils.product_images_upload_path,
                        verbose_name="Thumbnail",
                    ),
                ),
                (
                    "subproduct",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subproducts_images",
                        to="products.subproduct",
                        verbose_name="Sub Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub Product Image",
                "verbose_name_plural": "Sub Product Images",
                "db_table": "subproductimages",
            },
        ),
        migrations.AddField(
            model_name="subproduct",
            name="color",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="subproducts_colors",
                to="products.subproductscolor",
                verbose_name="Color",
            ),
        ),
        migrations.AddField(
            model_name="subproduct",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="subproduct",
            name="sizes",
            field=models.ManyToManyField(
                to="products.subproductssize", verbose_name="Size"
            ),
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(max_length=64, verbose_name="Sub Category Name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Sub Category Slug",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.category",
                        verbose_name="Main Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub Category",
                "verbose_name_plural": "Sub Categories",
                "db_table": "subcategories",
            },
        ),
        migrations.CreateModel(
            name="ProductsView",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ip",
                    models.CharField(max_length=255, verbose_name="User IP Address"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_views",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Total Views on Product",
                "verbose_name_plural": "Total Views on Products",
                "db_table": "productsviews",
            },
        ),
        migrations.CreateModel(
            name="ProductFAQ",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("answer", models.TextField(verbose_name="FAQ Answer")),
                (
                    "faq_question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.faqbase",
                        verbose_name="FAQ Question",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product FAQ",
                "verbose_name_plural": "Product FAQs",
                "db_table": "product_faqs",
            },
        ),
        migrations.AddField(
            model_name="product",
            name="sub_category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="products.subcategory",
                verbose_name="Sub Category",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="tag",
            field=models.ManyToManyField(
                blank=True, to="products.tag", verbose_name="Tags"
            ),
        ),
    ]
