# Generated by Django 4.2.1 on 2023-09-03 13:46

import apps.common.utils
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="Username"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email address"
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '9999999999'. Up to 16 digits allowed.",
                                regex="^\\d{9,17}$",
                            )
                        ],
                        verbose_name="Mobile No",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="First Name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Last Name"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Others", "Others"),
                        ],
                        default="Male",
                        max_length=8,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        default="default.jpg",
                        null=True,
                        upload_to=apps.common.utils.users_profile_upload_path,
                        verbose_name="Profile Picture",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "address_line_1",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Address 1"
                    ),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Address 2"
                    ),
                ),
                (
                    "pin_code",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Pin Code"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="City"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="State"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="country"
                    ),
                ),
                ("is_blocked", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "is_mobile_verified",
                    models.BooleanField(
                        default=False, verbose_name="Is Mobile Verified"
                    ),
                ),
                (
                    "is_email_verified",
                    models.BooleanField(
                        default=False, verbose_name="Is Email Verified"
                    ),
                ),
                (
                    "is_first_login",
                    models.BooleanField(
                        default=False, verbose_name="Is First Time Login"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "txn_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email_or_mobile", models.CharField(max_length=255)),
                ("otp", models.CharField(max_length=120)),
                ("is_verified", models.BooleanField(default=False)),
                ("expire_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "OTP",
                "verbose_name_plural": "OTPs",
                "db_table": "otp",
            },
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("token", models.CharField(max_length=500, verbose_name="Token")),
            ],
            options={
                "verbose_name": "Password Reset Token",
                "verbose_name_plural": "Password Reset Tokens",
                "db_table": "passwordresettokens",
            },
        ),
        migrations.CreateModel(
            name="UserAddress",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="First Name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Last Name"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Others", "Others"),
                        ],
                        default="Male",
                        max_length=8,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="Email address",
                    ),
                ),
                (
                    "alternate_number",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '9999999999'. Up to 16 digits allowed.",
                                regex="^\\d{9,17}$",
                            )
                        ],
                        verbose_name="Alternate Mobile No",
                    ),
                ),
                (
                    "address_1",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Address 1"
                    ),
                ),
                (
                    "address_2",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Address 1"
                    ),
                ),
                (
                    "locality",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Locality"
                    ),
                ),
                (
                    "landmark",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Landmark"
                    ),
                ),
                ("pincode", models.PositiveIntegerField(verbose_name="Pincode")),
                ("city", models.CharField(max_length=24, verbose_name="City")),
                ("state", models.CharField(max_length=24, verbose_name="State")),
                ("country", models.CharField(max_length=24, verbose_name="Country")),
                ("is_active", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_address",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Address",
                "verbose_name_plural": "User Addresses",
                "db_table": "useraddresses",
            },
        ),
        migrations.CreateModel(
            name="RazorpayContact",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "razorpay_conatct_id",
                    models.CharField(max_length=64, verbose_name="Razorpay Contact ID"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Razorpay Contact",
                "verbose_name_plural": "Razorpay Contacts",
                "db_table": "razorpaycontacts",
            },
        ),
        migrations.CreateModel(
            name="FundAccout",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contact_id",
                    models.CharField(max_length=64, verbose_name="Contact ID"),
                ),
                (
                    "razorpay_fund_id",
                    models.CharField(max_length=64, verbose_name="Razorpay Fund ID"),
                ),
                (
                    "account_type",
                    models.CharField(max_length=64, verbose_name="Account Type"),
                ),
                ("ifsc", models.CharField(max_length=64, verbose_name="IFSC")),
                (
                    "bank_name",
                    models.CharField(max_length=64, verbose_name="Bank Name"),
                ),
                ("name", models.CharField(max_length=64, verbose_name="Full Name")),
                (
                    "account_number",
                    models.PositiveBigIntegerField(verbose_name="Bank Account No"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Is Active"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fund_acc",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fund Account",
                "verbose_name_plural": "Fund Accounts",
                "db_table": "fundaccounts",
            },
        ),
    ]
